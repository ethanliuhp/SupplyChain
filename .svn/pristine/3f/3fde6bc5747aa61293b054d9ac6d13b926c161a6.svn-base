//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3634
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3634.
// 
#pragma warning disable 1591

namespace Application.Business.Erp.SupplyChain.SendMsgWebservice {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MainServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MainService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private ThinkSoftSoapHeader thinkSoftSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback SendICUMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSMsgNotInSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSMsgInSystemOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MainService() {
            this.Url = global::Application.Business.Erp.SupplyChain.Properties.Settings.Default.SupplyChain_SendMsgWebservice_MainService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public ThinkSoftSoapHeader ThinkSoftSoapHeaderValue {
            get {
                return this.thinkSoftSoapHeaderValueField;
            }
            set {
                this.thinkSoftSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendICUMsgCompletedEventHandler SendICUMsgCompleted;
        
        /// <remarks/>
        public event SendSMSMsgNotInSystemCompletedEventHandler SendSMSMsgNotInSystemCompleted;
        
        /// <remarks/>
        public event SendSMSMsgInSystemCompletedEventHandler SendSMSMsgInSystemCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ThinkSoftSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendICUMsg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendICUMsg(string Sender_UserName, byte HoldDay, string MsgContent, string ASoft, string Reciver, ref string ErrorMsg, bool CheckIsOnline, bool IsSendSMS) {
            object[] results = this.Invoke("SendICUMsg", new object[] {
                        Sender_UserName,
                        HoldDay,
                        MsgContent,
                        ASoft,
                        Reciver,
                        ErrorMsg,
                        CheckIsOnline,
                        IsSendSMS});
            ErrorMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendICUMsgAsync(string Sender_UserName, byte HoldDay, string MsgContent, string ASoft, string Reciver, string ErrorMsg, bool CheckIsOnline, bool IsSendSMS) {
            this.SendICUMsgAsync(Sender_UserName, HoldDay, MsgContent, ASoft, Reciver, ErrorMsg, CheckIsOnline, IsSendSMS, null);
        }
        
        /// <remarks/>
        public void SendICUMsgAsync(string Sender_UserName, byte HoldDay, string MsgContent, string ASoft, string Reciver, string ErrorMsg, bool CheckIsOnline, bool IsSendSMS, object userState) {
            if ((this.SendICUMsgOperationCompleted == null)) {
                this.SendICUMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendICUMsgOperationCompleted);
            }
            this.InvokeAsync("SendICUMsg", new object[] {
                        Sender_UserName,
                        HoldDay,
                        MsgContent,
                        ASoft,
                        Reciver,
                        ErrorMsg,
                        CheckIsOnline,
                        IsSendSMS}, this.SendICUMsgOperationCompleted, userState);
        }
        
        private void OnSendICUMsgOperationCompleted(object arg) {
            if ((this.SendICUMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendICUMsgCompleted(this, new SendICUMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ThinkSoftSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMSMsgNotInSystem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendSMSMsgNotInSystem(string Sender_UserName, string MsgContent, string Reciver_Mobile) {
            object[] results = this.Invoke("SendSMSMsgNotInSystem", new object[] {
                        Sender_UserName,
                        MsgContent,
                        Reciver_Mobile});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSMsgNotInSystemAsync(string Sender_UserName, string MsgContent, string Reciver_Mobile) {
            this.SendSMSMsgNotInSystemAsync(Sender_UserName, MsgContent, Reciver_Mobile, null);
        }
        
        /// <remarks/>
        public void SendSMSMsgNotInSystemAsync(string Sender_UserName, string MsgContent, string Reciver_Mobile, object userState) {
            if ((this.SendSMSMsgNotInSystemOperationCompleted == null)) {
                this.SendSMSMsgNotInSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSMsgNotInSystemOperationCompleted);
            }
            this.InvokeAsync("SendSMSMsgNotInSystem", new object[] {
                        Sender_UserName,
                        MsgContent,
                        Reciver_Mobile}, this.SendSMSMsgNotInSystemOperationCompleted, userState);
        }
        
        private void OnSendSMSMsgNotInSystemOperationCompleted(object arg) {
            if ((this.SendSMSMsgNotInSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSMsgNotInSystemCompleted(this, new SendSMSMsgNotInSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ThinkSoftSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMSMsgInSystem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendSMSMsgInSystem(string Sender_UserName, string MsgContent, string Reciver_UserName) {
            object[] results = this.Invoke("SendSMSMsgInSystem", new object[] {
                        Sender_UserName,
                        MsgContent,
                        Reciver_UserName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSMsgInSystemAsync(string Sender_UserName, string MsgContent, string Reciver_UserName) {
            this.SendSMSMsgInSystemAsync(Sender_UserName, MsgContent, Reciver_UserName, null);
        }
        
        /// <remarks/>
        public void SendSMSMsgInSystemAsync(string Sender_UserName, string MsgContent, string Reciver_UserName, object userState) {
            if ((this.SendSMSMsgInSystemOperationCompleted == null)) {
                this.SendSMSMsgInSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSMsgInSystemOperationCompleted);
            }
            this.InvokeAsync("SendSMSMsgInSystem", new object[] {
                        Sender_UserName,
                        MsgContent,
                        Reciver_UserName}, this.SendSMSMsgInSystemOperationCompleted, userState);
        }
        
        private void OnSendSMSMsgInSystemOperationCompleted(object arg) {
            if ((this.SendSMSMsgInSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSMsgInSystemCompleted(this, new SendSMSMsgInSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class ThinkSoftSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userIDField;
        
        private string passWordField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string PassWord {
            get {
                return this.passWordField;
            }
            set {
                this.passWordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SendICUMsgCompletedEventHandler(object sender, SendICUMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendICUMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendICUMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SendSMSMsgNotInSystemCompletedEventHandler(object sender, SendSMSMsgNotInSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSMsgNotInSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSMsgNotInSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SendSMSMsgInSystemCompletedEventHandler(object sender, SendSMSMsgInSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSMsgInSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSMsgInSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591